/*
 Generated by typeshare 1.11.0
*/

export interface Review {
  /** The text content of the review. */
  content: string;
  /** The course ID this review is for. */
  courseId: string;
  /** Difficulty rating from 1-5. */
  difficulty: number;
  /** List of instructor names for this review. */
  instructors: string[];
  /** Number of likes (net of dislikes) this review has received. */
  likes: number;
  /** Overall rating from 1-5. */
  rating: number;
  /** Timestamp when the review was created or last updated. */
  timestamp: string;
  /** The user ID of the review author. */
  userId: string;
}

export interface GetReviewsPayload {
  /** List of reviews matching the query. */
  reviews: Review[];
  /** Number of unique users who have submitted reviews (if requested). */
  uniqueUserCount?: number;
}

export interface Instructor {
  name: string;
  nameNgrams?: string;
  term: string;
}

export enum InteractionKind {
  Like = 'like',
  Dislike = 'dislike',
}

export interface Interaction {
  kind: InteractionKind;
  userId: string;
  courseId: string;
  referrer: string;
}

export interface Notification {
  review: Review;
  seen: boolean;
  userId: string;
}

export type ReqNode =
  | { type: 'course'; data: string }
  | {
      type: 'group';
      data: {
        operator: Operator;
        groups: ReqNode[];
      };
    };

export interface Requirements {
  prerequisitesText?: string;
  corequisitesText?: string;
  corequisites: string[];
  prerequisites: string[];
  restrictions?: string;
  logicalPrerequisites?: ReqNode;
  logicalCorequisites?: ReqNode;
}

export interface Subscription {
  courseId: string;
  userId: string;
}

export interface User {
  id: string;
  mail: string;
}

export interface UserResponse {
  user?: User;
}

export enum Operator {
  And = 'AND',
  Or = 'OR',
}
